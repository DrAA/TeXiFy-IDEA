{
    parserClass="nl.rubensten.texifyidea.bibtex.parser.BibtexParser"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Bibtex"
    psiImplClassSuffix="Impl"
    psiPackage="nl.rubensten.texifyidea.bibtex.psi"
    psiImplPackage="nl.rubensten.texifyidea.bibtex.psi.impl"

    elementTypeHolderClass="nl.rubensten.texifyidea.bibtex.psi.BibtexTypes"
    elementTypeClass="nl.rubensten.texifyidea.bibtex.psi.BibtexElementType"
    tokenTypeClass="nl.rubensten.texifyidea.bibtex.psi.BibtexTokenType"

    tokens=[
        WHITE_SPACE='regexp:\s+'
        DISPLAY_MATH_START='\['
        DISPLAY_MATH_END='\]'
        INLINE_MATH_START='$'
        INLINE_MATH_END='$'
        OPEN_BRACE='{'
        CLOSE_BRACE='}'
        OPEN_BRACKET='['
        CLOSE_BRACKET=']'
        COMMAND_TOKEN='regexp:\\([a-zA-Z]+|.|\n|\r)'
        COMMENT_TOKEN='regexp:%[^\r\n]*'
        STAR='*'
        NORMAL_TEXT='regexp:[^@\\{}%\[\]$]+'

        COMMAND_TOKEN='regexp:\\([a-zA-Z]+|.|\n|\r)'
        TYPE_TOKEN='regexp:@([a-zA-Z]+)'
        CITATION_KEY="regexp:[^ @'\",\#}{~% ]+"
        VALUE="regexp:[^ @'\",\#}{~% ]+"
        ASSIGNMENT='='
        SEPERATOR=','
        QUOTATION_MARK='"'
        CONCATENATE='#'
    ]
}

// BibTeX

bibtexFile ::= bibtex_content

bibtex_content ::= (comment | bibtex_entry)*

bibtex_entry ::= TYPE_TOKEN bibtex_entry_group

bibtex_entry_group ::= OPEN_BRACE bibtex_entry_group_contents CLOSE_BRACE

bibtex_entry_group_contents ::= bibtex_entry_title (bibtex_key_value_pair)*

bibtex_entry_title ::= CITATION_KEY SEPERATOR

bibtex_key_value_pair ::= bibtex_key ASSIGNMENT bibtex_value SEPERATOR

bibtex_key ::= CITATION_KEY

bibtex_value ::= bibtex_concatenate_value | bibtex_brace_value | bibtex_string

bibtex_concatenate_value ::= bibtex_string CONCATENATE (bibtex_string | bibtex_concatenate_value)

bibtex_brace_value ::= OPEN_BRACE latex_content CLOSE_BRACE

bibtex_string ::= QUOTATION_MARK latex_content QUOTATION_MARK

// LaTeX

//latexFile ::= content*

latex_content ::= no_math_content | math_environment

no_math_content ::= comment | commands | group | open_group | NORMAL_TEXT

commands ::= COMMAND_TOKEN STAR? parameter*

parameter ::= optional_param | required_param

optional_param ::= open_group

required_param ::= group

group ::= OPEN_BRACE latex_content* CLOSE_BRACE

open_group ::= OPEN_BRACKET latex_content* CLOSE_BRACKET

comment ::= COMMENT_TOKEN

math_environment ::= inline_math | display_math

inline_math ::= INLINE_MATH_START (no_math_content)* INLINE_MATH_END

display_math ::= DISPLAY_MATH_START (no_math_content)* DISPLAY_MATH_END
